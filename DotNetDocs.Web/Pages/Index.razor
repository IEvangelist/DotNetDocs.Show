@page "/"

@attribute [AllowAnonymous]

@using DotNetDocs.Services.Models
@using DotNetDocs.Web.Shared
@using DotNetDocs.Web.Workers
@using Microsoft.Extensions.Caching.Memory

@inject IMemoryCache Cache

@if (_shows == null)
{
    <LoadingIndicator />
}
else if (!_shows.Any())
{
    <div class="alert alert-secondary alert-dismissible fade show" role="alert">
        <strong>😥</strong> No scheduled shows... check back later!
        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>
}
else
{
    <div class="card-deck">
        @foreach (var (show, index) in
           _shows.OrderByDescending(show => show.Date)
                 .Select((show, index) => (show, index)))
        {
            <ShowDetails Show="show" Index="index" />
        }
    </div>
}

@code {
    private IEnumerable<DocsShow> _shows = null!;

    protected override void OnInitialized()
    {
        _shows = Cache.Get<IEnumerable<DocsShow>>(CacheKeys.ShowSchedule);
    }
}
